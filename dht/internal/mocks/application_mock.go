// Code generated by MockGen. DO NOT EDIT.
// Source: dht/node.go

// Package internal is a generated GoMock package.
package internal

import (
	pb "github.com/decanus/bureka/pb"
	gomock "github.com/golang/mock/gomock"
	peer "github.com/libp2p/go-libp2p-core/peer"
	reflect "reflect"
)

// MockApplication is a mock of Application interface
type MockApplication struct {
	ctrl     *gomock.Controller
	recorder *MockApplicationMockRecorder
}

// MockApplicationMockRecorder is the mock recorder for MockApplication
type MockApplicationMockRecorder struct {
	mock *MockApplication
}

// NewMockApplication creates a new mock instance
func NewMockApplication(ctrl *gomock.Controller) *MockApplication {
	mock := &MockApplication{ctrl: ctrl}
	mock.recorder = &MockApplicationMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockApplication) EXPECT() *MockApplicationMockRecorder {
	return m.recorder
}

// Deliver mocks base method
func (m *MockApplication) Deliver(msg pb.Message) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Deliver", msg)
}

// Deliver indicates an expected call of Deliver
func (mr *MockApplicationMockRecorder) Deliver(msg interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Deliver", reflect.TypeOf((*MockApplication)(nil).Deliver), msg)
}

// Forward mocks base method
func (m *MockApplication) Forward(msg pb.Message, target peer.ID) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Forward", msg, target)
	ret0, _ := ret[0].(bool)
	return ret0
}

// Forward indicates an expected call of Forward
func (mr *MockApplicationMockRecorder) Forward(msg, target interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Forward", reflect.TypeOf((*MockApplication)(nil).Forward), msg, target)
}

// Heartbeat mocks base method
func (m *MockApplication) Heartbeat(id peer.ID) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Heartbeat", id)
}

// Heartbeat indicates an expected call of Heartbeat
func (mr *MockApplicationMockRecorder) Heartbeat(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Heartbeat", reflect.TypeOf((*MockApplication)(nil).Heartbeat), id)
}
